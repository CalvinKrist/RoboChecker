mdp

//CONSTANTS
const int w = 23;
const int h = 41;

//Formula for checking if the robot can move along each angle
formula moveA0 = (((w-x2) >= 3) & ((y2) > 0)) & (((w-x2) >= 2) & ((y2) > 0)) & (((w-x2) >= 1) & ((y2) > 0)) & (((w-x2) >= 4) & ((y2) > 0)) & (((w-x2) >= 5) & ((y2) > 0));
formula moveA1 = (((w-x2) >= 1) & ((y2) > 0)) & (((w-x2) >= 3) & ((h-y2) >= 1)) & (((w-x2) >= 4) & ((h-y2) >= 1)) & (((w-x2) >= 2) & ((h-y2) >= 1)) & (((w-x2) >= 5) & ((h-y2) >= 2));
formula moveA2 = (((w-x2) >= 3) & ((h-y2) >= 2)) & (((w-x2) >= 1) & ((h-y2) >= 1)) & (((w-x2) >= 2) & ((h-y2) >= 1)) & (((w-x2) >= 2) & ((h-y2) >= 2)) & (((w-x2) >= 4) & ((h-y2) >= 3));
formula moveA3 = (((w-x2) >= 1) & ((h-y2) >= 2)) & (((w-x2) >= 2) & ((h-y2) >= 3)) & (((w-x2) >= 1) & ((h-y2) >= 1)) & (((w-x2) >= 2) & ((h-y2) >= 2)) & (((w-x2) >= 3) & ((h-y2) >= 4));
formula moveA4 = (((x2) > 0) & ((h-y2) >= 1)) & (((w-x2) >= 1) & ((h-y2) >= 4)) & (((w-x2) >= 1) & ((h-y2) >= 3)) & (((w-x2) >= 1) & ((h-y2) >= 2)) & (((w-x2) >= 2) & ((h-y2) >= 5));
formula moveA5 = (((x2) > 0) & ((h-y2) >= 1)) & (((x2) > 0) & ((h-y2) >= 3)) & (((x2) > 0) & ((h-y2) >= 2)) & (((x2) > 0) & ((h-y2) >= 4)) & (((x2) > 0) & ((h-y2) >= 5));
formula moveA6 = (((x2) > 0) & ((h-y2) >= 1)) & (((x2-1) > 0) & ((h-y2) >= 4)) & (((x2-1) > 0) & ((h-y2) >= 2)) & (((x2-1) > 0) & ((h-y2) >= 3)) & (((x2-2) > 0) & ((h-y2) >= 5));
formula moveA7 = (((x2-2) > 0) & ((h-y2) >= 3)) & (((x2-1) > 0) & ((h-y2) >= 1)) & (((x2-1) > 0) & ((h-y2) >= 2)) & (((x2-2) > 0) & ((h-y2) >= 2)) & (((x2-3) > 0) & ((h-y2) >= 4));
formula moveA8 = (((x2-2) > 0) & ((h-y2) >= 1)) & (((x2-1) > 0) & ((h-y2) >= 1)) & (((x2-2) > 0) & ((h-y2) >= 2)) & (((x2-3) > 0) & ((h-y2) >= 2)) & (((x2-4) > 0) & ((h-y2) >= 3));
formula moveA9 = (((x2-3) > 0) & ((h-y2) >= 1)) & (((x2-2) > 0) & ((h-y2) >= 1)) & (((x2-4) > 0) & ((h-y2) >= 1)) & (((x2-1) > 0) & ((y2) > 0)) & (((x2-5) > 0) & ((h-y2) >= 2));
formula moveA10 = (((x2-2) > 0) & ((y2) > 0)) & (((x2-1) > 0) & ((y2) > 0)) & (((x2-3) > 0) & ((y2) > 0)) & (((x2-4) > 0) & ((y2) > 0)) & (((x2-5) > 0) & ((y2) > 0));
formula moveA11 = (((x2-3) > 0) & ((y2-1) > 0)) & (((x2-4) > 0) & ((y2-1) > 0)) & (((x2-1) > 0) & ((y2) > 0)) & (((x2-2) > 0) & ((y2-1) > 0)) & (((x2-5) > 0) & ((y2-2) > 0));
formula moveA12 = (((x2-3) > 0) & ((y2-2) > 0)) & (((x2-2) > 0) & ((y2-1) > 0)) & (((x2-2) > 0) & ((y2-2) > 0)) & (((x2-1) > 0) & ((y2-1) > 0)) & (((x2-4) > 0) & ((y2-3) > 0));
formula moveA13 = (((x2-1) > 0) & ((y2-2) > 0)) & (((x2-2) > 0) & ((y2-2) > 0)) & (((x2-2) > 0) & ((y2-3) > 0)) & (((x2-1) > 0) & ((y2-1) > 0)) & (((x2-3) > 0) & ((y2-4) > 0));
formula moveA14 = (((x2) > 0) & ((y2-1) > 0)) & (((x2-1) > 0) & ((y2-4) > 0)) & (((x2-1) > 0) & ((y2-3) > 0)) & (((x2-1) > 0) & ((y2-2) > 0)) & (((x2-2) > 0) & ((y2-5) > 0));
formula moveA15 = (((x2) > 0) & ((y2-1) > 0)) & (((x2) > 0) & ((y2-3) > 0)) & (((x2) > 0) & ((y2-2) > 0)) & (((x2) > 0) & ((y2-4) > 0)) & (((x2) > 0) & ((y2-5) > 0));
formula moveA16 = (((x2) > 0) & ((y2-1) > 0)) & (((w-x2) >= 1) & ((y2-3) > 0)) & (((w-x2) >= 1) & ((y2-2) > 0)) & (((w-x2) >= 1) & ((y2-4) > 0)) & (((w-x2) >= 2) & ((y2-5) > 0));
formula moveA17 = (((w-x2) >= 2) & ((y2-3) > 0)) & (((w-x2) >= 2) & ((y2-2) > 0)) & (((w-x2) >= 1) & ((y2-1) > 0)) & (((w-x2) >= 1) & ((y2-2) > 0)) & (((w-x2) >= 3) & ((y2-4) > 0));
formula moveA18 = (((w-x2) >= 2) & ((y2-1) > 0)) & (((w-x2) >= 1) & ((y2-1) > 0)) & (((w-x2) >= 2) & ((y2-2) > 0)) & (((w-x2) >= 3) & ((y2-2) > 0)) & (((w-x2) >= 4) & ((y2-3) > 0));
formula moveA19 = (((w-x2) >= 1) & ((y2) > 0)) & (((w-x2) >= 2) & ((y2-1) > 0)) & (((w-x2) >= 4) & ((y2-1) > 0)) & (((w-x2) >= 3) & ((y2-1) > 0)) & (((w-x2) >= 5) & ((y2-2) > 0));

module random_robot

        x2 : [1..23] init 1; // robot x position
        y2 : [1..41] init 1; // robot y position
        dir : [0..19] init 0; // possible robot directions

        // Movement transitions when robot can move
        [] (dir=0 & moveA0) -> 1 : (x2'=x2+5) & (y2'=y2);
        [] (dir=1 & moveA1) -> 1 : (x2'=x2+5) & (y2'=y2+2);
        [] (dir=2 & moveA2) -> 1 : (x2'=x2+4) & (y2'=y2+3);
        [] (dir=3 & moveA3) -> 1 : (x2'=x2+3) & (y2'=y2+4);
        [] (dir=4 & moveA4) -> 1 : (x2'=x2+2) & (y2'=y2+5);
        [] (dir=5 & moveA5) -> 1 : (x2'=x2) & (y2'=y2+5);
        [] (dir=6 & moveA6) -> 1 : (x2'=x2-2) & (y2'=y2+5);
        [] (dir=7 & moveA7) -> 1 : (x2'=x2-3) & (y2'=y2+4);
        [] (dir=8 & moveA8) -> 1 : (x2'=x2-4) & (y2'=y2+3);
        [] (dir=9 & moveA9) -> 1 : (x2'=x2-5) & (y2'=y2+2);
        [] (dir=10 & moveA10) -> 1 : (x2'=x2-5) & (y2'=y2);
        [] (dir=11 & moveA11) -> 1 : (x2'=x2-5) & (y2'=y2-2);
        [] (dir=12 & moveA12) -> 1 : (x2'=x2-4) & (y2'=y2-3);
        [] (dir=13 & moveA13) -> 1 : (x2'=x2-3) & (y2'=y2-4);
        [] (dir=14 & moveA14) -> 1 : (x2'=x2-2) & (y2'=y2-5);
        [] (dir=15 & moveA15) -> 1 : (x2'=x2) & (y2'=y2-5);
        [] (dir=16 & moveA16) -> 1 : (x2'=x2+2) & (y2'=y2-5);
        [] (dir=17 & moveA17) -> 1 : (x2'=x2+3) & (y2'=y2-4);
        [] (dir=18 & moveA18) -> 1 : (x2'=x2+4) & (y2'=y2-3);
        [] (dir=19 & moveA19) -> 1 : (x2'=x2+5) & (y2'=y2-2);

        // Movement transitions when robot can't move
        [] (dir=0 & !moveA0) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=1 & !moveA1) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=2 & !moveA2) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=3 & !moveA3) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=4 & !moveA4) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=5 & !moveA5) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=6 & !moveA6) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=7 & !moveA7) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=8 & !moveA8) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=9 & !moveA9) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=10 & !moveA10) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=11 & !moveA11) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=12 & !moveA12) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=13 & !moveA13) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=14 & !moveA14) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=15 & !moveA15) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=16 & !moveA16) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=17 & !moveA17) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=18 & !moveA18) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);
        [] (dir=19 & !moveA19) -> 1 / 20 : (dir'=0) + 1 / 20 : (dir'=1) + 1 / 20 : (dir'=2) + 1 / 20 : (dir'=3) + 1 / 20 : (dir'=4) + 1 / 20 : (dir'=5) + 1 / 20 : (dir'=6) + 1 / 20 : (dir'=7) + 1 / 20 : (dir'=8) + 1 / 20 : (dir'=9) + 1 / 20 : (dir'=10) + 1 / 20 : (dir'=11) + 1 / 20 : (dir'=12) + 1 / 20 : (dir'=13) + 1 / 20 : (dir'=14) + 1 / 20 : (dir'=15) + 1 / 20 : (dir'=16) + 1 / 20 : (dir'=17) + 1 / 20 : (dir'=18) + 1 / 20 : (dir'=19);

endmodule